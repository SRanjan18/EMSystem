{"ast":null,"code":"import axios from 'axios';\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/api/employees\";\nclass EmployeeService {\n  getAllEmployees() {\n    return axios.get(EMPLOYEE_BASE_REST_API_URL);\n  }\n  createEmployee(employee) {\n    return axios.post(EMPLOYEE_BASE_REST_API_URL, employee);\n  }\n  getEmployeeById(employeeId) {\n    return axios.get(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n  }\n  updateEmployee(employeeId, employee) {\n    return axios.put(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId, employee);\n  }\n  deleteEmployee(employeeId) {\n    return axios.delete(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n  }\n}\nconst REST_API_BASE_URL = \"http://localhost:8080/api/employees\";\nexport const getAllEmployees = () => axios.get(REST_API_BASE_URL);\nexport const createEmployee = employee => axios.post(REST_API_BASE_URL, employee);\nconst getEmployeeById = employeeId => axios.get(REST_API_BASE_URL + '/' + employeeId);\nconst updateEmployee = (employeeId, employee) => axios.put(REST_API_BASE_URL + '/' + employeeId, employee);\nconst deleteEmployee = employeeId => axios.delete(REST_API_BASE_URL + '/' + employeeId);\nexport default new EmployeeService();","map":{"version":3,"names":["axios","EMPLOYEE_BASE_REST_API_URL","EmployeeService","getAllEmployees","get","createEmployee","employee","post","getEmployeeById","employeeId","updateEmployee","put","deleteEmployee","delete","REST_API_BASE_URL"],"sources":["/Users/soumyaranjan/Desktop/React-Hooks-Spring-Boot-CRUD-Full-Stack-App/react-hooks-frontend/src/services/EmployeeService.js"],"sourcesContent":["import axios from 'axios'\n\nconst EMPLOYEE_BASE_REST_API_URL = \"http://localhost:8080/api/employees\";\n\nclass EmployeeService{\n\n    getAllEmployees(){\n        return axios.get(EMPLOYEE_BASE_REST_API_URL)\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_BASE_REST_API_URL, employee)\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n    }\n\n    updateEmployee(employeeId, employee){\n        return axios.put(EMPLOYEE_BASE_REST_API_URL + '/' +employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_BASE_REST_API_URL + '/' + employeeId);\n    }\n}\nconst REST_API_BASE_URL=\"http://localhost:8080/api/employees\";\n\nexport const getAllEmployees=()=>axios.get(REST_API_BASE_URL);\nexport const createEmployee=(employee)=>axios.post(REST_API_BASE_URL,employee);\n const getEmployeeById=(employeeId)=>axios.get(REST_API_BASE_URL+'/'+employeeId);\n const updateEmployee=(employeeId,employee)=>axios.put(REST_API_BASE_URL+'/'+employeeId,employee);\n const deleteEmployee=(employeeId)=>axios.delete(REST_API_BASE_URL+'/'+employeeId);\n\nexport default new EmployeeService();\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,0BAA0B,GAAG,qCAAqC;AAExE,MAAMC,eAAe;EAEjBC,eAAeA,CAAA,EAAE;IACb,OAAOH,KAAK,CAACI,GAAG,CAACH,0BAA0B,CAAC;EAChD;EAEAI,cAAcA,CAACC,QAAQ,EAAC;IACpB,OAAON,KAAK,CAACO,IAAI,CAACN,0BAA0B,EAAEK,QAAQ,CAAC;EAC3D;EAEAE,eAAeA,CAACC,UAAU,EAAC;IACvB,OAAOT,KAAK,CAACI,GAAG,CAACH,0BAA0B,GAAG,GAAG,GAAGQ,UAAU,CAAC;EACnE;EAEAC,cAAcA,CAACD,UAAU,EAAEH,QAAQ,EAAC;IAChC,OAAON,KAAK,CAACW,GAAG,CAACV,0BAA0B,GAAG,GAAG,GAAEQ,UAAU,EAAEH,QAAQ,CAAC;EAC5E;EAEAM,cAAcA,CAACH,UAAU,EAAC;IACtB,OAAOT,KAAK,CAACa,MAAM,CAACZ,0BAA0B,GAAG,GAAG,GAAGQ,UAAU,CAAC;EACtE;AACJ;AACA,MAAMK,iBAAiB,GAAC,qCAAqC;AAE7D,OAAO,MAAMX,eAAe,GAACA,CAAA,KAAIH,KAAK,CAACI,GAAG,CAACU,iBAAiB,CAAC;AAC7D,OAAO,MAAMT,cAAc,GAAEC,QAAQ,IAAGN,KAAK,CAACO,IAAI,CAACO,iBAAiB,EAACR,QAAQ,CAAC;AAC7E,MAAME,eAAe,GAAEC,UAAU,IAAGT,KAAK,CAACI,GAAG,CAACU,iBAAiB,GAAC,GAAG,GAACL,UAAU,CAAC;AAC/E,MAAMC,cAAc,GAACA,CAACD,UAAU,EAACH,QAAQ,KAAGN,KAAK,CAACW,GAAG,CAACG,iBAAiB,GAAC,GAAG,GAACL,UAAU,EAACH,QAAQ,CAAC;AAChG,MAAMM,cAAc,GAAEH,UAAU,IAAGT,KAAK,CAACa,MAAM,CAACC,iBAAiB,GAAC,GAAG,GAACL,UAAU,CAAC;AAElF,eAAe,IAAIP,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}